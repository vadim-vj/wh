_Products:_ *A*, *B*, *C*
_Algorithm (director):_ *Alg*
Products have no common parent class

||*A*|*B*|*C*|
|*Alg*|-> <code>A(/* ... */)</code>|-> <code>B(/* ... */)</code>|-> <code>C(/* ... */)</code>|

_Example:_ support for multiple document types

||*PlainSQL*|*Excel*|
|*ExportFromDatabase*|-> <code>new PlainSQL($data);</code>|-> <code>new Excel($data);</code>|

_Code example:_ algorithm (director)

<pre><code>function export(): void {
    $document = new PlainSQL();
    // $document = new Excel();

    foreach ($data as $row) {
        $document->appendRow($row);
        // $document->insertFromText($row);
    }
}</code></pre>_Needed:_ change document class in runtime
&nbsp;
_Solutions:_
# Common (for all languages): "Builder":https://github.com/vadim-vj/gang-of-four/tree/master/Builder
# For weakly typed languages (such as PHP): it's possible to add common getter (<code>getDocument()</code>) for all builders. Return type declaration for this getter must be omitted (or some common interface <code>IBase</code> should be implemented for all product classes)